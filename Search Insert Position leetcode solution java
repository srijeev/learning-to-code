Given a sorted array of distinct integers and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.
You must write an algorithm with O(log n) runtime complexity.
Input: nums = [1,3,5,6], target = 5
Output: 2
Solution - What we need to do here is 
  1. If the target number matches an element from the array, return the index of the element(i).
  2. else if the target doesn't match an element from the array, then 
      if ( target > i-1), return i
      else if ( target < i+1 & target > i) return  i+1
      else ( target < 0) return 0
      
class Solution {
    public int searchInsert(int[] nums, int target) {
        int n = nums.length;
        
        for(int i=0;i<n;i++){
            if(nums[i]==target){
                return i;
            }
            else if(nums[n-1]<target){
                return n;
            }
            else if(nums[i]<target && nums[i+1]>target){
                return i+1;
           }
            
            else if(target<nums[0]){
                return 0;
            }         
               
        }       
        
        return 0;
    }
}
  
  
